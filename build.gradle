buildscript {
    repositories {
        //使用本地maven仓库
        mavenLocal()
        //阿里云Maven镜像
        maven { url 'http://maven.aliyun.com/nexus/content/groups/public/' }
        mavenCentral()
        maven { url "https://plugins.gradle.org/m2/"}
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:1.5.9.RELEASE")
        classpath("io.spring.gradle:dependency-management-plugin:1.0.9.RELEASE")
    }
}

apply plugin: 'java'
apply plugin: 'org.springframework.boot'
apply plugin: 'application'
apply plugin: "maven-publish"
apply plugin: "io.spring.dependency-management"

group = "com.aero"
version = "1.0-SNAPSHOT"
archivesBaseName = 'aero-ops'
def parentVersion = '1.0-SNAPSHOT'


tasks.withType(JavaCompile) {
    options.encoding = 'utf-8'
}

configurations.all{
    resolutionStrategy(){
        //将冲突解决策略改为发生冲突时报错
        failOnVersionConflict()
        force "org.slf4j:slf4j-api:1.7.30"
        //srpring-fox.2.9.2 中的1.5.20版本会报NumberFormatException
        force "io.swagger:swagger-annotations:1.5.21"
        force "io.swagger:swagger-models:1.5.21"
    }
}

// 冲突报错 + 以下任务 + 命令行搜索
// gradlew allDepInsight  --configuration compile --dependency ${keyword}
//可以搜索出某个jar包被哪些依赖引用，然后用于解决依赖冲突
//subprojects和allprojects的效果一样
task allDepInsight(type: DependencyInsightReportTask){
    doFirst {}
}

repositories {
    mavenLocal()
    maven {
        url 'https://maven.aliyun.com/repository/public'
    }
    maven {
        credentials {
            username '5f02b6c7cc3021d7e3a18a83'
            password ']yiTy7fm]4A('
        }
        url 'https://packages.aliyun.com/maven/repository/2013092-release-7h4CWP/'
    }

    maven {
        credentials {
            username '5f02b6c7cc3021d7e3a18a83'
            password ']yiTy7fm]4A('
        }
        url 'https://packages.aliyun.com/maven/repository/2013092-snapshot-YGIfCF/'
    }
    mavenCentral()
}

dependencyManagement {
    imports {
        mavenBom("com.aero:aero-parent:${parentVersion}")
    }
}

configurations.all {
    // check for updates every build
    resolutionStrategy.cacheChangingModulesFor 0, 'seconds'
}


dependencies {
    //引入项目内的其它模块
    compile "com.aero:aero-common"

    //引入项目内的jar文件
    compile files('libs/taobao-sdk-java-auto_1479188381469-20200709.jar')
//    compile files('libs/jolokia-jvm-1.6.2-agent.jar')

//    compile group: 'org.jolokia', name: 'jolokia-core', version: '1.6.2'
//
//    compile(group: 'org.springframework.boot', name: 'spring-boot-starter-actuator'){
//        exclude group: 'org.hdrhistogram' , module: 'HdrHistogram'
//        exclude group:"org.springframework.boot", module: "spring-boot-starter-logging"
//    }

    compile("org.springframework.boot:spring-boot-starter-web") {
        exclude group:"org.springframework.boot", module: "spring-boot-starter-logging"
        exclude group:"org.jboss.logging", module: "jboss-logging"
    }

    /**log4j2*/
    compile group: 'org.springframework.boot', name: 'spring-boot-starter-log4j2'

    /**elasticsearch*/
    compile group: 'org.springframework.data', name: 'spring-data-elasticsearch'

    /**druid*/
    compile group: 'com.alibaba', name: 'druid-spring-boot-starter'

    /**sqlserver*/
    compile group: 'com.microsoft.sqlserver', name: 'mssql-jdbc'

    /**mongodb**/
    compile group: 'org.springframework.data', name: 'spring-data-mongodb'

    /**mybatis*/
    compile ("org.mybatis.spring.boot:mybatis-spring-boot-starter"){
        exclude group: 'org.springframework.boot', module: 'spring-boot-starter-logging'
    }

    /**pagehelper*/
    compile (group: 'com.github.pagehelper', name: 'pagehelper-spring-boot-starter'){
        exclude group: 'org.springframework.boot', module: 'spring-boot-starter-logging'
    }

    /**kafka*/
    compile "org.springframework.kafka:spring-kafka"

    /**websocket*/
    compile('org.springframework.boot:spring-boot-starter-websocket'){
        exclude group: 'org.springframework.boot', module: 'spring-boot-starter-logging'
    }

    /**validation*/
    compile (group: 'org.springframework.boot', name: 'spring-boot-starter-validation') {
        exclude group: 'org.springframework.boot', module: 'spring-boot-starter-logging'
    }


    // lombok
    compile group: 'org.projectlombok', name: 'lombok'
    annotationProcessor "org.projectlombok:lombok"

    testCompile group: 'junit', name: 'junit'
}

